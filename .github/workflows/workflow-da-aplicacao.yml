name: Deploy da Aplicacao e Testes Cypress

on:
  push:
    branches:
      - main  # Dispara quando houver um push na branch main da aplicacao

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do codigo da aplicacao
        uses: actions/checkout@v3 #Objetivo: Baixar o codigo do repositoio para o ambiente da pipeline, permitindo que os proximos passos possam acessar e manipular os arquivos do projeto.

      - name: Simular Deploy da Aplicacao
        run: echo "Aplicacao implantada com sucesso!"

      - name: Disparar casos de testes do repositório de testes (Cypress)
        id: trigger-tests
        uses: peter-evans/repository-dispatch@v2
        with:
          repository: viniciuscarneironascimento/mark85-cypress-api-papito  # Repositório de testes apartado da aplicação
          event-type: run-cypress-tests  # Tipo de evento para acionar o workflow
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN_APLICACAO }}  # Token do repositório da aplicação

      - name: Aguardar execução da pipeline de testes
        run: |
          for i in {1..10}; do
            STATUS_URL="https://api.github.com/repos/viniciuscarneironascimento/mark85-cypress-api-papito/actions/runs"
            RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN_APLICACAO }}" $STATUS_URL)
            LATEST_RUN_STATUS=$(echo "$RESPONSE" | jq -r '.workflow_runs[0].conclusion')

            if [[ "$LATEST_RUN_STATUS" == "success" ]]; then
              echo "Testes passaram com sucesso!"
              exit 0
            elif [[ "$LATEST_RUN_STATUS" == "failure" ]]; then
              echo "A pipeline de testes no Cypress falhou. Interrompendo o deploy!"
              exit 1
            fi

            echo "Aguardando conclusão dos testes..."
            sleep 30
          done

          echo "Timeout ao aguardar a conclusão dos testes."
          exit 1

      - name: Deploy Final
        run: echo "Deploy finalizado com sucesso!"