name: Deploy da Aplicacao e Testes Cypress

on:
  push:
    branches:
      - main  # Dispara quando houver um push na branch main da aplicação

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código da aplicação
        uses: actions/checkout@v3

      - name: Simular Deploy da Aplicação
        run: echo "Aplicação implantada com sucesso!"

      - name: Disparar casos de testes do repositório de testes (Cypress)
        id: trigger-tests
        uses: peter-evans/repository-dispatch@v2
        with:
          repository: viniciuscarneironascimento/mark85-cypress-api-papito
          event-type: run-cypress-tests
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN_APLICACAO }}

      - name: Aguardar execução da pipeline de testes
        run: |
          STATUS_URL="https://api.github.com/repos/viniciuscarneironascimento/mark85-cypress-api-papito/actions/runs"
          MAX_ATTEMPTS=20
          ATTEMPT=0

          echo "Aguardando execução da pipeline de testes..."

          while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
            sleep 30  # Aguarda 30 segundos antes de verificar novamente
            RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN_TEST_CYPRESS }}" $STATUS_URL)

            # Verifica se a resposta contém execuções válidas
            if [[ -z "$RESPONSE" || "$RESPONSE" == "null" ]]; then
              echo "Tentativa $((ATTEMPT+1)): Nenhuma resposta válida da API. Tentando novamente..."
              ATTEMPT=$((ATTEMPT+1))
              continue
            fi

            # Filtrar apenas a execução mais recente da branch "main"
            LATEST_RUN_STATUS=$(echo "$RESPONSE" | jq -r '.workflow_runs | map(select(.head_branch == "main" and .event == "repository_dispatch")) | first | {status, conclusion}')

            STATUS=$(echo "$LATEST_RUN_STATUS" | jq -r '.status // empty')
            CONCLUSION=$(echo "$LATEST_RUN_STATUS" | jq -r '.conclusion // empty')

            echo "Tentativa $((ATTEMPT+1)): Status atual - ${STATUS:-'Indisponível'}, Conclusão - ${CONCLUSION:-'Indisponível'}"

            if [[ "$STATUS" == "completed" ]]; then
              if [[ "$CONCLUSION" == "success" ]]; then
                echo "Pipeline de testes finalizada com sucesso!"
                break
              elif [[ "$CONCLUSION" == "failure" ]]; then
                echo "A pipeline de testes no Cypress falhou. Interrompendo o deploy!"
                exit 1
              fi
            fi

            ATTEMPT=$((ATTEMPT+1))
          done

          if [[ "$ATTEMPT" -eq "$MAX_ATTEMPTS" ]]; then
            echo "Tempo limite excedido esperando a pipeline de testes. Interrompendo o deploy!"
            exit 1
          fi

      - name: Deploy Final
        run: echo "Deploy finalizado com sucesso!"
